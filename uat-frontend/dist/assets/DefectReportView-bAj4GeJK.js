import{_ as v,c as i,o as n,a as t,j as w,n as C,k as f,d as p,v as y,p as h,F as b,g,t as a,q as x,r as _,m as k,b as F,f as m}from"./index-DrsjAiDN.js";const M={props:{testCases:Array,defectOptions:Array},data(){return{defect:{title:"",description:"",execution:"",severity:"Medium",execution_id:"",reported_by_id:"",evidence:null},errorMessage:""}},methods:{handleFileUpload(o){this.defect.evidence=o.target.files[0]},async submit(){var l,c;if(!this.defect.execution){this.errorMessage="Please select a related test case.";return}this.errorMessage="";const o=new FormData;o.append("title",this.defect.title),o.append("description",this.defect.description),o.append("execution_id",this.defect.execution),o.append("severity",this.defect.severity);const e=this.testCases.find(r=>r.id===this.defect.execution);e&&e.assigned_user&&(console.log("{{reported_by_id}}"),o.append("reported_by_id",e.assigned_user)),this.defect.evidence&&o.append("evidence",this.defect.evidence);try{console.log("Submitting defect:",Object.fromEntries(o)),this.$emit("submit",o)}catch(r){if(console.error("Error submitting defect:",((l=r.response)==null?void 0:l.data)||r),(c=r.response)!=null&&c.data){const d=r.response.data;this.errorMessage=Object.values(d).flat().join(" ")}else this.errorMessage="Failed to submit defect. Please check the required fields."}}}},q={class:"modal-overlay"},O={class:"modal-content"},S={class:"form-group"},T={class:"form-group"},V={class:"form-group"},N=["value"],E={class:"form-group"},R=["value"],U={class:"form-group"},A={class:"form-buttons"},j={key:0,class:"error-text"};function B(o,e,l,c,r,d){return n(),i("div",q,[t("div",O,[e[13]||(e[13]=t("h3",{class:"modal-title"},"Report a Defect",-1)),t("form",{onSubmit:e[6]||(e[6]=w((...s)=>d.submit&&d.submit(...s),["stop","prevent"]))},[t("div",S,[e[7]||(e[7]=t("label",null,[p("Defect Name "),t("span",{class:"required"},"*")],-1)),f(t("input",{type:"text","onUpdate:modelValue":e[0]||(e[0]=s=>r.defect.title=s),class:"form-control",required:""},null,512),[[y,r.defect.title]])]),t("div",T,[e[8]||(e[8]=t("label",null,[p("Defect Description "),t("span",{class:"required"},"*")],-1)),f(t("textarea",{"onUpdate:modelValue":e[1]||(e[1]=s=>r.defect.description=s),class:"form-control",rows:"3",required:""},null,512),[[y,r.defect.description]])]),t("div",V,[e[9]||(e[9]=t("label",null,[p("Related Test Case "),t("span",{class:"required"},"*")],-1)),f(t("select",{"onUpdate:modelValue":e[2]||(e[2]=s=>r.defect.execution=s),class:"form-control",required:""},[(n(!0),i(b,null,g(l.testCases,s=>(n(),i("option",{key:s.id,value:s.id},a(s.title),9,N))),128))],512),[[h,r.defect.execution]])]),t("div",E,[e[10]||(e[10]=t("label",null,[p("Severity "),t("span",{class:"required"},"*")],-1)),f(t("select",{"onUpdate:modelValue":e[3]||(e[3]=s=>r.defect.severity=s),class:"form-control",required:""},[(n(!0),i(b,null,g(l.defectOptions.severity_options,s=>(n(),i("option",{key:s.label,value:s.value},a(s.label),9,R))),128))],512),[[h,r.defect.severity]])]),t("div",U,[e[11]||(e[11]=t("label",null,"Attach Evidence",-1)),t("input",{type:"file",onChange:e[4]||(e[4]=(...s)=>d.handleFileUpload&&d.handleFileUpload(...s)),class:"form-control"},null,32)]),t("div",A,[e[12]||(e[12]=t("button",{type:"submit",class:"btn btn-orange"},"Submit",-1)),t("button",{type:"button",onClick:e[5]||(e[5]=s=>o.$emit("close")),class:"btn btn-secondary"},"Cancel")]),r.errorMessage?(n(),i("p",j,a(r.errorMessage),1)):C("",!0)],32)])])}const I=v(M,[["render",B],["__scopeId","data-v-32a5c032"]]),P={props:{defects:{type:Array,required:!0}},methods:{severityClass(o){return{"badge bg-danger":o==="Critical","badge bg-warning":o==="High","badge bg-primary":o==="Medium","badge bg-success":o==="Low"}}}},L={key:0,class:"no-defects"},z={key:1,class:"table custom-table shadow-sm"},H={class:"badge bg-warning"},$=["href"],G={key:1};function J(o,e,l,c,r,d){return n(),i("div",null,[l.defects.length===0?(n(),i("div",L,e[0]||(e[0]=[t("p",null,"No defects reported yet. âœ…",-1)]))):(n(),i("table",z,[e[1]||(e[1]=t("thead",null,[t("tr",null,[t("th",null,"Defect Title"),t("th",null,"Test Case"),t("th",null,"Severity"),t("th",null,"Status"),t("th",null,"Evidence")])],-1)),t("tbody",null,[(n(!0),i(b,null,g(l.defects,s=>{var u;return n(),i("tr",{key:s.id},[t("td",null,a(s.title),1),t("td",null,a(((u=s.test_case)==null?void 0:u.title)||"N/A"),1),t("td",null,[t("span",{class:x(d.severityClass(s.severity))},a(s.severity),3)]),t("td",null,[t("span",H,a(s.status||"Pending"),1)]),t("td",null,[s.evidence?(n(),i("a",{key:0,href:s.evidence,target:"_blank",class:"btn btn-link"}," ðŸ“Ž View ",8,$)):(n(),i("span",G,"No Evidence"))])])}),128))])]))])}const K=v(P,[["render",J],["__scopeId","data-v-e44e5b85"]]),Q={components:{DefectForm:I,DefectTable:K},data(){return{showForm:!1,defects:[],testCases:[],defectOptions:[]}},methods:{async fetchData(){try{const o=await m.get("/test-cases/"),e=await m.get("/defects/"),l=await m.get("/defect-options/");this.testCases=o.data,this.defectOptions=l.data,this.defects=e.data}catch(o){console.error("Error fetching defects or test cases:",o)}},async submitDefect(o){try{await m.post("/defects/",o,{headers:{"Content-Type":"multipart/form-data"}}),this.showForm=!1,this.fetchData()}catch(e){console.error("Error submitting defect:",e)}}},mounted(){this.fetchData()}},W={class:"container mt-4"};function X(o,e,l,c,r,d){const s=_("DefectForm"),u=_("DefectTable");return n(),i("div",W,[e[2]||(e[2]=t("h2",{class:"text-center"},"Report Defects",-1)),t("button",{class:"btn btn-primary my-3",onClick:e[0]||(e[0]=D=>r.showForm=!0)},"âž• Report New Defect"),r.showForm?(n(),k(s,{key:0,onClose:e[1]||(e[1]=D=>r.showForm=!1),onSubmit:d.submitDefect,testCases:r.testCases,defectOptions:r.defectOptions},null,8,["onSubmit","testCases","defectOptions"])):C("",!0),F(u,{defects:r.defects},null,8,["defects"])])}const Z=v(Q,[["render",X]]);export{Z as default};
