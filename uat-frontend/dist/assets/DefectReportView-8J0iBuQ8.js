import{_ as p,c as r,o as l,b as t,f as D,g as u,q as m,v,l as g,F as h,d as _,t as d,n as w,r as y,i as k,j as F,a as x,m as f}from"./index-BDR-ZV5H.js";const N={props:{testCases:Array},data(){return{defect:{name:"",description:"",test_case_id:"",severity:"Medium",evidence:null}}},methods:{handleFileUpload(n){this.defect.evidence=n.target.files[0]},submit(){const n=new FormData;n.append("name",this.defect.name),n.append("description",this.defect.description),n.append("test_case_id",this.defect.test_case_id),n.append("severity",this.defect.severity),this.defect.evidence&&n.append("evidence",this.defect.evidence),this.$emit("submit",n)}}},V={class:"modal-overlay"},q={class:"modal-content"},S={class:"form-group"},T={class:"form-group"},M={class:"form-group"},R=["value"],U={class:"form-group"},E={class:"form-group"},$={class:"form-buttons"};function A(n,e,a,b,o,i){return l(),r("div",V,[t("div",q,[e[14]||(e[14]=t("h3",{class:"modal-title"}," Report a Defect",-1)),t("form",{onSubmit:e[6]||(e[6]=D((...s)=>i.submit&&i.submit(...s),["prevent"]))},[t("div",S,[e[7]||(e[7]=t("label",null,[m("Defect Name "),t("span",{class:"required"},"*")],-1)),u(t("input",{type:"text","onUpdate:modelValue":e[0]||(e[0]=s=>o.defect.name=s),class:"form-control",required:""},null,512),[[v,o.defect.name]])]),t("div",T,[e[8]||(e[8]=t("label",null,[m("Defect Description "),t("span",{class:"required"},"*")],-1)),u(t("textarea",{"onUpdate:modelValue":e[1]||(e[1]=s=>o.defect.description=s),class:"form-control",rows:"3",required:""},null,512),[[v,o.defect.description]])]),t("div",M,[e[9]||(e[9]=t("label",null,[m("Related Test Case "),t("span",{class:"required"},"*")],-1)),u(t("select",{"onUpdate:modelValue":e[2]||(e[2]=s=>o.defect.test_case_id=s),class:"form-control",required:""},[(l(!0),r(h,null,_(a.testCases,s=>(l(),r("option",{key:s.id,value:s.id},d(s.title),9,R))),128))],512),[[g,o.defect.test_case_id]])]),t("div",U,[e[11]||(e[11]=t("label",null,[m("Severity "),t("span",{class:"required"},"*")],-1)),u(t("select",{"onUpdate:modelValue":e[3]||(e[3]=s=>o.defect.severity=s),class:"form-control custom-select",required:""},e[10]||(e[10]=[t("option",{value:"Critical"}," Critical",-1),t("option",{value:"High"}," High",-1),t("option",{value:"Medium"}," Medium",-1),t("option",{value:"Low"}," Low",-1)]),512),[[g,o.defect.severity]])]),t("div",E,[e[12]||(e[12]=t("label",null,"Attach Evidence",-1)),t("input",{type:"file",onChange:e[4]||(e[4]=(...s)=>i.handleFileUpload&&i.handleFileUpload(...s)),class:"form-control file-input"},null,32)]),t("div",$,[e[13]||(e[13]=t("button",{type:"submit",class:"btn btn-orange"},"Submit",-1)),t("button",{type:"button",onClick:e[5]||(e[5]=s=>n.$emit("close")),class:"btn btn-secondary"},"Cancel")])],32)])])}const B=p(N,[["render",A],["__scopeId","data-v-12c82801"]]),L={props:{defects:Array},methods:{severityClass(n){return{"badge bg-danger":n==="Critical","badge bg-warning":n==="High","badge bg-primary":n==="Medium","badge bg-success":n==="Low"}}}},H={key:0,class:"no-defects"},I={key:1,class:"table custom-table shadow-sm"},P={class:"badge bg-warning"},j=["href"],z={key:1};function G(n,e,a,b,o,i){return l(),r("div",null,[a.defects.length===0?(l(),r("div",H,e[0]||(e[0]=[t("p",null,"No defects reported yet. âœ…",-1)]))):(l(),r("table",I,[e[1]||(e[1]=t("thead",null,[t("tr",null,[t("th",null,"Defect Name"),t("th",null,"Test Case"),t("th",null,"Severity"),t("th",null,"Status"),t("th",null,"Evidence")])],-1)),t("tbody",null,[(l(!0),r(h,null,_(a.defects,s=>{var c;return l(),r("tr",{key:s.id},[t("td",null,d(s.name),1),t("td",null,d(((c=s.test_case)==null?void 0:c.title)||"N/A"),1),t("td",null,[t("span",{class:w(i.severityClass(s.severity))},d(s.severity),3)]),t("td",null,[t("span",P,d(s.status||"Pending"),1)]),t("td",null,[s.evidence?(l(),r("a",{key:0,href:s.evidence,target:"_blank",class:"btn btn-link"}," ðŸ“Ž View ",8,j)):(l(),r("span",z,"No Evidence"))])])}),128))])]))])}const J=p(L,[["render",G]]),K={components:{DefectForm:B,DefectTable:J},data(){return{showForm:!1,defects:[],testCases:[]}},methods:{async fetchData(){try{const[n,e]=await Promise.all([f.get("/defects/"),f.get("/testcases/")]);this.defects=n.data,this.testCases=e.data}catch(n){console.error("Error fetching defects or test cases:",n)}},async submitDefect(n){try{const e=await f.post("/defects/",n,{headers:{"Content-Type":"multipart/form-data"}});this.defects.push(e.data),this.showForm=!1}catch(e){console.error("Error submitting defect:",e)}}},mounted(){this.fetchData()}},O={class:"container mt-4"};function Q(n,e,a,b,o,i){const s=y("DefectForm"),c=y("DefectTable");return l(),r("div",O,[e[2]||(e[2]=t("h2",{class:"text-center"}," Report Defects",-1)),t("button",{class:"btn btn-primary my-3",onClick:e[0]||(e[0]=C=>o.showForm=!0)},"âž• Report New Defect"),o.showForm?(l(),k(s,{key:0,onClose:e[1]||(e[1]=C=>o.showForm=!1),onSubmit:i.submitDefect,testCases:o.testCases},null,8,["onSubmit","testCases"])):F("",!0),x(c,{defects:o.defects},null,8,["defects"])])}const X=p(K,[["render",Q]]);export{X as default};
